# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'pid_test_6_tabs.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QTimer, QAbstractTableModel
from PyQt5.QtWidgets import QFileDialog
from pyqtgraph.widgets.MatplotlibWidget import MatplotlibWidget
import numpy as np

from matplotlib.lines import Line2D

from model.ViewState import ViewState

from threads.StopableThread import *
from tools.PIDControl import *
from view.QTDBSelector import *

from data.FSTargetDataMeasurement import *
from data.FSRealDataMeasurement import *
from data.SSRealDataMeasurement import *

class Ui_MainWindow(object):
    def __init__(self, ser, *args, **kwargs):
        self.ser = ser
        self.saver = None
        object.__init__(self, *args, **kwargs)
        self.state:ViewState = ViewState.getState()
        self.controlThread = StopableThread(True, target=controllTemperature, args=(getCurrentObjectTemperature, getCurrentTargetTempFunc, self.state.configPidParams, self.state.getPower, setObjectPower, self.ser))

    
    def startUpdate(self):
        # Repeating timer, calls random_pick over and over.
        self.ui_target_plot_data,  = self.subplot.plot(self.state.plot1TargetData[0], self.state.plot1TargetData[1]) 
        self.ui_real_plot_data,  = self.subplot.plot(np.array(self.state.plot1RealData[0]), self.state.plot1RealData[1]) 
        self.approx_figure = self.subplot.fill_between(np.array(self.state.plot1TargetData[0]), np.array(self.state.plot1TargetData[1]) + 10, np.array(self.state.plot1TargetData[1]) - 10, color='blue', alpha=0.3)
        self.plotupdater = QTimer()
        self.plotupdater.setInterval(500)
        self.plotupdater.timeout.connect(self.updatePlot1)
        self.plotupdater.start()
        
    def startAutoSave(self):
        self.saver = QTimer()
        self.saver.setInterval(5000)
        self.saver.timeout.connect(lambda:self.state.setExperimentFSTarget())
        self.saver.start()

    def updatePlot1(self):
        self.approx_figure.remove()
        self.approx_figure = self.subplot.fill_between(np.array(self.state.plot1TargetData[0]), np.array(self.state.plot1TargetData[1]) + self.state.spaceValue, np.array(self.state.plot1TargetData[1]) - self.state.spaceValue, color='blue', alpha=0.3)
        
        self.ui_target_plot_data.set_xdata(self.state.plot1TargetData[0])
        self.ui_target_plot_data.set_ydata(self.state.plot1TargetData[1])

        self.ui_real_plot_data.set_xdata(self.state.plot1RealData[0])
        self.ui_real_plot_data.set_ydata(self.state.plot1RealData[1])
            
        # self.graphicsView.getFigure().canvas.draw()
        self.graphicsView.getFigure().canvas.draw_idle()
       
    def setTargetPlotData(self):
        model = self.tableWidget.model()
        tableData = []
        needSetNull = False
        for rowId in range(model.rowCount()):
            rowData = []
            for colId in range(model.columnCount()):
                itemId = model.index(rowId, colId)
                if not needSetNull:
                    
                    data = model.data(itemId)
                    try:
                        data = int(data)
                        prevX = tableData[-1][0] if len(tableData) > 0 else -1
                        if data == None or (colId == 0 and prevX >= data) or (colId == 1 and data < 25):
                            model.setData(itemId, None)
                            needSetNull = True
                        else:
                            rowData.append(data)
                    except:
                        model.setData(itemId, None)
                        needSetNull = True
                else:
                    model.setData(itemId, None)
            if not needSetNull:
                tableData.append(rowData)

        
        self.state.plot1TargetData[0] = [row[0] for row in tableData]
        self.state.plot1TargetData[1] = [row[1] for row in tableData]
        # self.state.setExperimentFSTarget(self.state.plot1TargetData)
        return tableData

    def addTableRow(self):
            rowPosition = self.tableWidget.rowCount()
            self.tableWidget.insertRow(rowPosition)
            
    def setCurrentModel(self, value):
        self.cur_model_layout.setText(value)
        self.state.selectedPID = value
        
        if self.state.selectedPID == 'Степенная':
            self.label.show()
            self.label_2.show()
            self.label_3.show()
            self.label_4.show()
            self.label_5.show()
            self.k1_input.show()
            self.k2_input.show()
            self.k3_input.show()
            self.k4_input.show()
            self.k5_input.show()
            
            self.label_1_ind.hide()
            self.label_2_ind.hide()
            self.k1_ind_input.hide()
            self.k2_ind_input.hide()
        elif self.state.selectedPID == 'Промышленная':
            self.label.hide()
            self.label_2.hide()
            self.label_3.hide()
            self.label_4.hide()
            self.label_5.hide()
            self.k1_input.hide()
            self.k2_input.hide()
            self.k3_input.hide()
            self.k4_input.hide()
            self.k5_input.hide()
            
            self.label_1_ind.show()
            self.label_2_ind.show()
            self.k1_ind_input.show()
            self.k2_ind_input.show()
        else:
            self.label.hide()
            self.label_2.hide()
            self.label_3.hide()
            self.label_4.hide()
            self.label_5.hide()
            self.k1_input.hide()
            self.k2_input.hide()
            self.k3_input.hide()
            self.k4_input.hide()
            self.k5_input.hide()
            
            self.label_1_ind.hide()
            self.label_2_ind.hide()
            self.k1_ind_input.hide()
            self.k2_ind_input.hide()
        
    def clearTable(self):
        model = self.tableWidget.model()
        itemsId = [model.index(r, c) for r in range(model.rowCount()) for c in range(model.columnCount())]
        for iId in itemsId:
            model.setData(iId, None)
            
    def dropData(self):
        # controlThread.pause()
        self.clearTable()
        self.state.stopPlot1()
        self.state.stopPlot2()
        self.state.plot1TargetData = [[], []] 
        self.state.plot1RealData = [[], []]
        
    def dropRealData(self):
        # controlThread.pause()
        self.state.stopPlot1()
        self.state.stopPlot2()
        self.state.plot1RealData = [[], []]
        
    def setInfo(self, id, name, description):
        if id:
            self.label_10.setText("0" * (5-len(str(id))) + str(id))
        else:
            self.label_10.setText("XXXXX")
        self.expName.setText(name)
        self.plainTextEdit.setPlainText(description)
        
    def dropInfo(self):
        self.setInfo("XXXXX", None, None)
        
    def __setSelectedExperiment(self, exp:Experiment):
        if self.saver:
            self.saver.stop()
        # print(exp.fsTargetData, exp.fsRealData)
        self.state.experiment = exp
        
        self.setInfo(exp.id, exp.name, exp.description)
        
        self.dropData()
        model = self.tableWidget.model()
        print('upload', self.state.experiment.fsTargetData)
        targetDataList = [[data.time, data.value] for data in self.state.experiment.fsTargetData]
        rowId = 0
        for targetData in targetDataList:
            ind1 = model.index(rowId, 0)
            ind2 = model.index(rowId, 1)
            model.setData(ind1, targetData[0])
            model.setData(ind2, targetData[1])
            rowId += 1
        
        tempx = []
        tempy = []    
        for realData in exp.fsRealData:
            tempx.append(realData.time)
            tempy.append(realData.value)
             
        self.state.plot1RealData = [tempx, tempy]
            
        print('lens', len(self.state.plot1TargetData[0]), len(self.state.plot1TargetData[1]))
        # sleep(100000)

    def loadCsv(self):
        self.sideDialog = QTDBSelector(Experiment.getAll())
        self.sideWindow = QtWidgets.QDialog()
        self.sideDialog.setupUi(self.sideWindow)
        
        self.sideWindow.exec()
        if self.sideDialog.selected:
            self.__setSelectedExperiment(Experiment.getByID(self.sideDialog.selected))
        self.sideDialog = None
        '''
        # window.exec_()
        
        # fileName =  QFileDialog.getOpenFileName(self.menubar, 'Загрузить', None, "All files (*.expd)")[0]
        # if fileName != '':
        #     self.dropData()
        #     with open(fileName, 'r') as file:
        #         model = self.tableWidget.model()
                
        #         line = file.readline()
        #         line = file.readline()
        #         data = line.split(' ')
        #         rowId = 0
        #         while len(data) == 2:
        #             self.state.plot1RealData[0].append(float(data[0])) 
        #             self.state.plot1RealData[1].append(float(data[1]) )
        #             ind1 = model.index(rowId, 0)
        #             ind2 = model.index(rowId, 1)
        #             model.setData(ind1, float(data[0]))
        #             model.setData(ind2, float(data[1]))
        #             line = file.readline()
        #             data = line.split(' ')
        #             rowId += 1
                    
        #         line = file.readline()
        #         data = line.split(' ')
        #         tempx = []
        #         tempy = []
        #         while len(data) == 2:
        #             tempx.append(float(data[0])) 
        #             try:
        #                 y = float(data[1])
        #             except:
        #                 y = None
        #             tempy.append(y)  
        #             line = file.readline()
        #             data = line.split(' ') 
                
        #         self.state.plot1RealData = [tempx, tempy]
                
        #         print('lens', len(self.state.plot1RealData[0]),len(self.state.plot1RealData[1]))
        '''
    
    def startPID1(self):
        if not self.saver:
            self.startAutoSave()
        self.saver.start()
        
        self.state.playPlot1()
        self.controlThread.play()
        
    def pausePID1(self):
        self.saver.stop()
        
        self.state.pausePlot1()
        self.controlThread.pause()
    
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1099, 730)
        def SETUP(self):
            
            self.centralwidget = QtWidgets.QWidget(MainWindow)
            self.centralwidget.setObjectName("centralwidget")
            self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
            self.gridLayout.setObjectName("gridLayout")
            self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
            self.tabWidget.setObjectName("tabWidget")
            
            self.tab_6 = QtWidgets.QWidget()
            self.tab_6.setObjectName("tab_6")
            self.gridLayout_5 = QtWidgets.QGridLayout(self.tab_6)
            self.gridLayout_5.setObjectName("gridLayout_5")
            spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
            self.gridLayout_5.addItem(spacerItem, 0, 1, 1, 1)
            self.verticalLayout_2 = QtWidgets.QVBoxLayout()
            self.verticalLayout_2.setObjectName("verticalLayout_2")
            self.gridLayout_4 = QtWidgets.QGridLayout()
            self.gridLayout_4.setObjectName("gridLayout_4")
            self.expName = QtWidgets.QLineEdit(self.tab_6)
            self.expName.setObjectName("expName")
            self.gridLayout_4.addWidget(self.expName, 1, 0, 1, 1)
            self.label_8 = QtWidgets.QLabel(self.tab_6)
            self.label_8.setObjectName("label_8")
            self.gridLayout_4.addWidget(self.label_8, 0, 0, 1, 1)
            self.label_9 = QtWidgets.QLabel(self.tab_6)
            self.label_9.setObjectName("label_9")
            self.gridLayout_4.addWidget(self.label_9, 0, 1, 1, 1)
            self.label_10 = QtWidgets.QLabel(self.tab_6)
            font = QtGui.QFont()
            font.setBold(True)
            font.setWeight(75)
            self.label_10.setFont(font)
            self.label_10.setObjectName("label_10")
            self.gridLayout_4.addWidget(self.label_10, 1, 1, 1, 1)
            self.verticalLayout_2.addLayout(self.gridLayout_4)
            self.gridLayout_6 = QtWidgets.QGridLayout()
            self.gridLayout_6.setObjectName("gridLayout_6")
            self.label_11 = QtWidgets.QLabel(self.tab_6)
            self.label_11.setObjectName("label_11")
            self.gridLayout_6.addWidget(self.label_11, 0, 0, 1, 1)
            self.plainTextEdit = QtWidgets.QPlainTextEdit(self.tab_6)
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(self.plainTextEdit.sizePolicy().hasHeightForWidth())
            self.plainTextEdit.setSizePolicy(sizePolicy)
            self.plainTextEdit.setPlainText("")
            self.plainTextEdit.setObjectName("plainTextEdit")
            self.gridLayout_6.addWidget(self.plainTextEdit, 1, 0, 1, 1)
            self.verticalLayout_2.addLayout(self.gridLayout_6)
            
            
            self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
            self.horizontalLayout_4.setObjectName("horizontalLayout_4")
            
            self.saveExpButton = QtWidgets.QPushButton()
            self.horizontalLayout_4.addWidget(self.saveExpButton)
            self.duplicateExpButton = QtWidgets.QPushButton()
            self.horizontalLayout_4.addWidget(self.duplicateExpButton)
            self.deleteExpButton = QtWidgets.QPushButton()
            self.horizontalLayout_4.addWidget(self.deleteExpButton)
            spacerItem0 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
            self.horizontalLayout_4.addItem(spacerItem0)
            self.verticalLayout_2.addLayout(self.horizontalLayout_4)
            
            spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
            self.verticalLayout_2.addItem(spacerItem1)
            self.gridLayout_5.addLayout(self.verticalLayout_2, 0, 0, 1, 1)
            self.tabWidget.addTab(self.tab_6, "")
            self.tab_5 = QtWidgets.QWidget()
            self.tab_5.setMaximumSize(QtCore.QSize(16777215, 16777215))
            self.tab_5.setObjectName("tab_5")
            self.gridLayout_3 = QtWidgets.QGridLayout(self.tab_5)
            self.gridLayout_3.setObjectName("gridLayout_3")
            self.widget = QtWidgets.QWidget(self.tab_5)
            self.widget.setEnabled(True)
            self.widget.setMaximumSize(QtCore.QSize(690, 423))
            self.widget.setObjectName("widget")
            self.gridLayout_2 = QtWidgets.QGridLayout(self.widget)
            self.gridLayout_2.setObjectName("gridLayout_2")
            self.gridLayout_3.addWidget(self.widget, 6, 0, 1, 1)
            
            self.graphicsView = MatplotlibWidget(self.centralwidget)
            self.subplot = self.graphicsView.getFigure().add_subplot()
            self.subplot.grid()
            # self.subplot.set_xlim(0, 400)
            # self.subplot.set_ylim(0, 400)
            self.gridLayout_3.addWidget(self.graphicsView, 3, 1, 1, 1)
            
            
            self.label_7 = QtWidgets.QLabel(self.tab_5)
            self.label_7.setObjectName("label_7")
            self.gridLayout_3.addWidget(self.label_7, 1, 0, 1, 1)
            
            #table
            self.tableWidget = QtWidgets.QTableWidget(self.tab_5)
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(self.tableWidget.sizePolicy().hasHeightForWidth())
            self.tableWidget.setSizePolicy(sizePolicy)
            self.tableWidget.setMinimumSize(QtCore.QSize(301, 0))
            self.tableWidget.setObjectName("tableWidget")
            self.tableWidget.setColumnCount(2)
            self.tableWidget.setRowCount(30)
            
            
            #inside table
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(0, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(1, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(2, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(3, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(4, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(5, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(6, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(7, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(8, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(9, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(10, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(11, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(12, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(13, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(14, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(15, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(16, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(17, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(18, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(19, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(20, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(21, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(22, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(23, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(24, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(25, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(26, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(27, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(28, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(29, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setHorizontalHeaderItem(0, item)
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setHorizontalHeaderItem(1, item)
            
            self.tableWidget.itemChanged.connect(self.setTargetPlotData)
            self.gridLayout_3.addWidget(self.tableWidget, 3, 0, 1, 1)
            
            
            self.addTableRowButton = QtWidgets.QPushButton(self.tab_5)
            self.addTableRowButton.setObjectName("addTableRowButton")
            self.addTableRowButton.clicked.connect(self.addTableRow)
            self.gridLayout_3.addWidget(self.addTableRowButton, 4, 0, 1, 1)
                
            # self.addTableRowButton = QtWidgets.QPushButton(self.centralwidget)
            # self.addTableRowButton.setObjectName("addTableRowButton")
            
            
            
            
            
            self.horizontalLayout = QtWidgets.QHBoxLayout()
            self.horizontalLayout.setObjectName("horizontalLayout")
            self.verticalLayout = QtWidgets.QVBoxLayout()
            self.verticalLayout.setObjectName("verticalLayout")
            
            
            
            
            self.label = QtWidgets.QLabel(self.centralwidget)
            self.label.setObjectName("label")
            self.verticalLayout.addWidget(self.label)
            self.k1_input = QtWidgets.QDoubleSpinBox(self.centralwidget)
            self.k1_input.setObjectName("k1_input")
            self.k1_input.valueChanged.connect(lambda: self.setK_1(self.k1_input.value()))
            self.verticalLayout.addWidget(self.k1_input)
            
            self.label_2 = QtWidgets.QLabel(self.centralwidget)
            self.label_2.setObjectName("label_2")
            self.verticalLayout.addWidget(self.label_2)
            self.k2_input = QtWidgets.QDoubleSpinBox(self.centralwidget)
            self.k2_input.setObjectName("k2_input")
            self.verticalLayout.addWidget(self.k2_input)
            self.k2_input.valueChanged.connect(lambda: self.setK_2(self.k2_input.value()))
            
            self.label_3 = QtWidgets.QLabel(self.centralwidget)
            self.label_3.setObjectName("label_3")
            self.verticalLayout.addWidget(self.label_3)
            self.k3_input = QtWidgets.QDoubleSpinBox(self.centralwidget)
            self.k3_input.setObjectName("k3_input")
            self.verticalLayout.addWidget(self.k3_input)
            self.k3_input.valueChanged.connect(lambda: self.setK_3(self.k3_input.value()))
            
            self.label_4 = QtWidgets.QLabel(self.centralwidget)
            self.label_4.setObjectName("label_4")
            self.verticalLayout.addWidget(self.label_4)
            self.k4_input = QtWidgets.QDoubleSpinBox(self.centralwidget)
            self.k4_input.setObjectName("k4_input")
            self.k4_input.valueChanged.connect(lambda: self.setK_4(self.k4_input.value()))
            self.verticalLayout.addWidget(self.k4_input)
            
            self.label_5 = QtWidgets.QLabel(self.centralwidget)
            self.label_5.setObjectName("label_5")
            self.verticalLayout.addWidget(self.label_5)
            self.k5_input = QtWidgets.QDoubleSpinBox(self.centralwidget)
            self.k5_input.setObjectName("k5_input")
            self.k5_input.valueChanged.connect(lambda: self.setK_5(self.k5_input.value()))
            self.verticalLayout.addWidget(self.k5_input)
            
            
            self.label_1_ind = QtWidgets.QLabel(self.centralwidget)
            self.label_1_ind.setObjectName("label_1_ind")
            self.verticalLayout.addWidget(self.label_1_ind)
            self.k1_ind_input = QtWidgets.QDoubleSpinBox(self.centralwidget)
            self.k1_ind_input.setObjectName("k1_ind_input")
            self.k1_ind_input.valueChanged.connect(lambda: self.setK_1_industrial(self.k1_ind_input.value()))
            self.verticalLayout.addWidget(self.k1_ind_input)
            
            self.label_2_ind = QtWidgets.QLabel(self.centralwidget)
            self.label_2_ind.setObjectName("label_2_ind")
            self.verticalLayout.addWidget(self.label_2_ind)
            self.k2_ind_input = QtWidgets.QDoubleSpinBox(self.centralwidget)
            self.k2_ind_input.setObjectName("k2_ind_input")
            self.k2_ind_input.valueChanged.connect(lambda: self.setK_2_industrial(self.k2_ind_input.value()))
            self.verticalLayout.addWidget(self.k2_ind_input)
            
            
            
            
            self.line_5 = QtWidgets.QFrame(self.tab_5)
            self.line_5.setFrameShape(QtWidgets.QFrame.HLine)
            self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
            self.line_5.setObjectName("line_5")
            self.verticalLayout.addWidget(self.line_5)
            
            
            self.label_space = QtWidgets.QLabel(self.centralwidget)
            self.label_space.setObjectName("label_space")
            self.verticalLayout.addWidget(self.label_space)
            self.space_input = QtWidgets.QDoubleSpinBox(self.centralwidget)
            self.space_input.setObjectName("space_input")
            self.space_input.valueChanged.connect(lambda: self.setSpaceValue(self.space_input.value()))
            self.verticalLayout.addWidget(self.space_input)
            
            spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
            self.verticalLayout.addItem(spacerItem2)
            
            # self.pushButton = QtWidgets.QPushButton(self.tab_5)
            # self.pushButton.setObjectName("pushButton")
            # self.verticalLayout.addWidget(self.pushButton)
            
            self.horizontalLayout.addLayout(self.verticalLayout)
            self.gridLayout_3.addLayout(self.horizontalLayout, 3, 2, 1, 1)
            
            
            self.formLayout = QtWidgets.QFormLayout()
            self.formLayout.setObjectName("formLayout")
            self.cur_model_layout = QtWidgets.QLabel(self.tab_5)
            font = QtGui.QFont()
            font.setBold(True)
            font.setWeight(75)
            self.cur_model_layout.setFont(font)
            self.cur_model_layout.setObjectName("cur_model_layout")
            self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.cur_model_layout)
            self.label_6 = QtWidgets.QLabel(self.tab_5)
            self.label_6.setObjectName("label_6")
            self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_6)
            self.gridLayout_3.addLayout(self.formLayout, 1, 1, 1, 1)
            self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
            self.horizontalLayout_2.setObjectName("horizontalLayout_2")
            self.start_btn = QtWidgets.QPushButton(self.tab_5)
            self.start_btn.setObjectName("start_btn")
            self.horizontalLayout_2.addWidget(self.start_btn)
            self.stop_btn = QtWidgets.QPushButton(self.tab_5)
            self.stop_btn.setObjectName("stop_btn")
            self.horizontalLayout_2.addWidget(self.stop_btn)
            
            self.start_btn.clicked.connect(self.startPID1)
            self.stop_btn.clicked.connect(self.pausePID1)
            
            
            self.gridLayout_3.addLayout(self.horizontalLayout_2, 4, 1, 1, 1)
            self.tabWidget.addTab(self.tab_5, "")
            self.tab_7 = QtWidgets.QWidget()
            self.tab_7.setObjectName("tab_7")
            self.gridLayout_8 = QtWidgets.QGridLayout(self.tab_7)
            self.gridLayout_8.setObjectName("gridLayout_8")
            self.verticalLayout_3 = QtWidgets.QVBoxLayout()
            self.verticalLayout_3.setObjectName("verticalLayout_3")
            self.label_12 = QtWidgets.QLabel(self.tab_7)
            font = QtGui.QFont()
            font.setPointSize(8)
            font.setBold(True)
            font.setWeight(75)
            self.label_12.setFont(font)
            self.label_12.setObjectName("label_12")
            self.verticalLayout_3.addWidget(self.label_12)
            self.line_3 = QtWidgets.QFrame(self.tab_7)
            self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
            self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
            self.line_3.setObjectName("line_3")
            self.verticalLayout_3.addWidget(self.line_3)
            self.label_15 = QtWidgets.QLabel(self.tab_7)
            self.label_15.setObjectName("label_15")
            self.verticalLayout_3.addWidget(self.label_15)
            self.doubleSpinBox = QtWidgets.QDoubleSpinBox(self.tab_7)
            self.doubleSpinBox.setObjectName("doubleSpinBox")
            self.verticalLayout_3.addWidget(self.doubleSpinBox)
            self.gridLayout_7 = QtWidgets.QGridLayout()
            self.gridLayout_7.setObjectName("gridLayout_7")
            self.startTest = QtWidgets.QPushButton(self.tab_7)
            self.startTest.setObjectName("startTest")
            self.gridLayout_7.addWidget(self.startTest, 1, 0, 1, 1)
            self.stopTest = QtWidgets.QPushButton(self.tab_7)
            self.stopTest.setObjectName("stopTest")
            self.gridLayout_7.addWidget(self.stopTest, 1, 1, 1, 1)
            self.verticalLayout_3.addLayout(self.gridLayout_7)
            self.line_2 = QtWidgets.QFrame(self.tab_7)
            self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
            self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
            self.line_2.setObjectName("line_2")
            self.verticalLayout_3.addWidget(self.line_2)
            self.label_16 = QtWidgets.QLabel(self.tab_7)
            self.label_16.setObjectName("label_16")
            self.verticalLayout_3.addWidget(self.label_16)
            self.gridLayout_9 = QtWidgets.QGridLayout()
            self.gridLayout_9.setObjectName("gridLayout_9")
            self.label_17 = QtWidgets.QLabel(self.tab_7)
            self.label_17.setObjectName("label_17")
            self.gridLayout_9.addWidget(self.label_17, 0, 0, 1, 1)
            self.zeroSearch = QtWidgets.QPushButton(self.tab_7)
            self.zeroSearch.setObjectName("zeroSearch")
            self.gridLayout_9.addWidget(self.zeroSearch, 0, 1, 1, 1)
            self.label_18 = QtWidgets.QLabel(self.tab_7)
            self.label_18.setObjectName("label_18")
            self.gridLayout_9.addWidget(self.label_18, 1, 0, 1, 1)
            self.smashSwitch = QtWidgets.QPushButton(self.tab_7)
            self.smashSwitch.setObjectName("smashSwitch")
            self.gridLayout_9.addWidget(self.smashSwitch, 1, 1, 1, 1)
            self.verticalLayout_3.addLayout(self.gridLayout_9)
            self.line = QtWidgets.QFrame(self.tab_7)
            self.line.setFrameShape(QtWidgets.QFrame.HLine)
            self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
            self.line.setObjectName("line")
            self.verticalLayout_3.addWidget(self.line)
            self.label_19 = QtWidgets.QLabel(self.tab_7)
            self.label_19.setObjectName("label_19")
            self.verticalLayout_3.addWidget(self.label_19)
            self.textEdit = QtWidgets.QTextEdit(self.tab_7)
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(self.textEdit.sizePolicy().hasHeightForWidth())
            self.textEdit.setSizePolicy(sizePolicy)
            self.textEdit.setObjectName("textEdit")
            self.verticalLayout_3.addWidget(self.textEdit)
            self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
            self.horizontalLayout_3.setObjectName("horizontalLayout_3")
            self.submitComment = QtWidgets.QPushButton(self.tab_7)
            self.submitComment.setObjectName("submitComment")
            self.horizontalLayout_3.addWidget(self.submitComment)
            self.pushButton_4 = QtWidgets.QPushButton(self.tab_7)
            self.pushButton_4.setObjectName("pushButton_4")
            self.horizontalLayout_3.addWidget(self.pushButton_4)
            self.verticalLayout_3.addLayout(self.horizontalLayout_3)
            spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
            self.verticalLayout_3.addItem(spacerItem3)
            self.gridLayout_8.addLayout(self.verticalLayout_3, 0, 1, 1, 1)
            self.verticalLayout_5 = QtWidgets.QVBoxLayout()
            self.verticalLayout_5.setObjectName("verticalLayout_5")
            self.label_13 = QtWidgets.QLabel(self.tab_7)
            self.label_13.setObjectName("label_13")
            self.verticalLayout_5.addWidget(self.label_13)
            self.graphicsView_2 = QtWidgets.QGraphicsView(self.tab_7)
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(1)
            sizePolicy.setHeightForWidth(self.graphicsView_2.sizePolicy().hasHeightForWidth())
            self.graphicsView_2.setSizePolicy(sizePolicy)
            self.graphicsView_2.setMinimumSize(QtCore.QSize(0, 350))
            self.graphicsView_2.setMaximumSize(QtCore.QSize(16777215, 350))
            self.graphicsView_2.setObjectName("graphicsView_2")
            self.verticalLayout_5.addWidget(self.graphicsView_2)
            self.line_4 = QtWidgets.QFrame(self.tab_7)
            self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
            self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
            self.line_4.setObjectName("line_4")
            self.verticalLayout_5.addWidget(self.line_4)
            self.label_14 = QtWidgets.QLabel(self.tab_7)
            self.label_14.setObjectName("label_14")
            self.verticalLayout_5.addWidget(self.label_14)
            self.textBrowser = QtWidgets.QTextBrowser(self.tab_7)
            self.textBrowser.setObjectName("textBrowser")
            self.verticalLayout_5.addWidget(self.textBrowser)
            spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
            self.verticalLayout_5.addItem(spacerItem4)
            self.gridLayout_8.addLayout(self.verticalLayout_5, 0, 0, 1, 1)
            self.tabWidget.addTab(self.tab_7, "")
            self.gridLayout.addWidget(self.tabWidget, 1, 0, 1, 1)
            MainWindow.setCentralWidget(self.centralwidget)
            self.menubar = QtWidgets.QMenuBar(MainWindow)
            self.menubar.setGeometry(QtCore.QRect(0, 0, 1099, 26))
            self.menubar.setObjectName("menubar")
            self.menuFile = QtWidgets.QMenu(self.menubar)
            self.menuFile.setObjectName("menuFile")
            self.menu = QtWidgets.QMenu(self.menubar)
            self.menu.setObjectName("menu")
            self.menu_2 = QtWidgets.QMenu(self.menu)
            self.menu_2.setObjectName("menu_2")
            MainWindow.setMenuBar(self.menubar)
            self.statusbar = QtWidgets.QStatusBar(MainWindow)
            self.statusbar.setObjectName("statusbar")
            MainWindow.setStatusBar(self.statusbar)
            self.save_as_file = QtWidgets.QAction(MainWindow)
            self.save_as_file.setObjectName("save_as_file")
            self.free_track = QtWidgets.QAction(MainWindow)
            self.free_track.setObjectName("free_track")
            self.free_real_track = QtWidgets.QAction(MainWindow)
            self.free_real_track.setObjectName("free_real_track")
            self.base_model = QtWidgets.QAction(MainWindow)
            self.base_model.setObjectName("base_model")
            self.powered_model = QtWidgets.QAction(MainWindow)
            self.powered_model.setObjectName("powered_model")
            self.production_model = QtWidgets.QAction(MainWindow)
            self.production_model.setObjectName("production_model")
            self.load_file = QtWidgets.QAction(MainWindow)
            self.load_file.setObjectName("load_file")
            self.menuFile.addAction(self.save_as_file)
            self.menuFile.addAction(self.load_file)
            self.menuFile.addAction(self.free_track)
            self.menuFile.addAction(self.free_real_track)
            # self.menu_2.addAction(self.base_model)
            
            self.menu_2.addSeparator()
            self.menu_2.addAction(self.powered_model)
            self.menu_2.addAction(self.production_model)
            self.menu.addAction(self.menu_2.menuAction())
            self.menubar.addAction(self.menuFile.menuAction())
            self.menubar.addAction(self.menu.menuAction())

            self.retranslateUi(MainWindow)
            self.tabWidget.setCurrentIndex(2)
            QtCore.QMetaObject.connectSlotsByName(MainWindow)
            
            self.tabWidget.setCurrentIndex(0)
        SETUP(self)
        
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_8.setText(_translate("MainWindow", "Название"))
        self.label_9.setText(_translate("MainWindow", "Код"))
        self.label_10.setText(_translate("MainWindow", "XXXXX"))
        self.label_11.setText(_translate("MainWindow", "Комментарий"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_6), _translate("MainWindow", "Настройка"))
        self.label_7.setText(_translate("MainWindow", "Протокол"))
        item = self.tableWidget.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.tableWidget.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.tableWidget.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.tableWidget.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.tableWidget.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.tableWidget.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.tableWidget.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.tableWidget.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "8"))
        item = self.tableWidget.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "9"))
        item = self.tableWidget.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "10"))
        item = self.tableWidget.verticalHeaderItem(10)
        item.setText(_translate("MainWindow", "11"))
        item = self.tableWidget.verticalHeaderItem(11)
        item.setText(_translate("MainWindow", "12"))
        item = self.tableWidget.verticalHeaderItem(12)
        item.setText(_translate("MainWindow", "13"))
        item = self.tableWidget.verticalHeaderItem(13)
        item.setText(_translate("MainWindow", "14"))
        item = self.tableWidget.verticalHeaderItem(14)
        item.setText(_translate("MainWindow", "15"))
        item = self.tableWidget.verticalHeaderItem(15)
        item.setText(_translate("MainWindow", "16"))
        item = self.tableWidget.verticalHeaderItem(16)
        item.setText(_translate("MainWindow", "17"))
        item = self.tableWidget.verticalHeaderItem(17)
        item.setText(_translate("MainWindow", "18"))
        item = self.tableWidget.verticalHeaderItem(18)
        item.setText(_translate("MainWindow", "19"))
        item = self.tableWidget.verticalHeaderItem(19)
        item.setText(_translate("MainWindow", "20"))
        item = self.tableWidget.verticalHeaderItem(20)
        item.setText(_translate("MainWindow", "21"))
        item = self.tableWidget.verticalHeaderItem(21)
        item.setText(_translate("MainWindow", "22"))
        item = self.tableWidget.verticalHeaderItem(22)
        item.setText(_translate("MainWindow", "23"))
        item = self.tableWidget.verticalHeaderItem(23)
        item.setText(_translate("MainWindow", "24"))
        item = self.tableWidget.verticalHeaderItem(24)
        item.setText(_translate("MainWindow", "25"))
        item = self.tableWidget.verticalHeaderItem(25)
        item.setText(_translate("MainWindow", "26"))
        item = self.tableWidget.verticalHeaderItem(26)
        item.setText(_translate("MainWindow", "27"))
        item = self.tableWidget.verticalHeaderItem(27)
        item.setText(_translate("MainWindow", "28"))
        item = self.tableWidget.verticalHeaderItem(28)
        item.setText(_translate("MainWindow", "29"))
        item = self.tableWidget.verticalHeaderItem(29)
        item.setText(_translate("MainWindow", "30"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Время"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Температура"))
        self.label.setText(_translate("MainWindow", "K_1"))
        self.label_2.setText(_translate("MainWindow", "K_2"))
        self.label_3.setText(_translate("MainWindow", "K_3"))
        self.label_4.setText(_translate("MainWindow", "K_4"))
        self.label_5.setText(_translate("MainWindow", "K_5"))
        
        self.label_1_ind.setText(_translate("MainWindow", "K_1"))
        self.label_2_ind.setText(_translate("MainWindow", "K_2"))
        
        self.label_space.setText(_translate("MainWindow", "Допустимость"))
        self.space_input.setValue(10.)
        
        
        self.k1_input.setMaximum(10000)
        self.k2_input.setMaximum(10000)
        self.k3_input.setMaximum(10000)
        self.k4_input.setMaximum(10000)
        self.k5_input.setMaximum(10000)
        
        
        self.k1_input.setValue(self.state.pidModule.k1)
        self.k2_input.setValue(self.state.pidModule.k2)
        self.k3_input.setValue(self.state.pidModule.k3)
        self.k4_input.setValue(self.state.pidModule.k4)
        self.k5_input.setValue(self.state.pidModule.k5)
        
        
        self.k1_ind_input.setMaximum(10000)
        self.k2_ind_input.setMaximum(10000)
        self.k1_ind_input.setValue(self.state.pidModuleIndustrial.k1)
        self.k2_ind_input.setValue(self.state.pidModuleIndustrial.k2)
        
        self.k1_ind_input.hide()
        self.k2_ind_input.hide()
        
        self.label_1_ind.hide()
        self.label_2_ind.hide()
        
        
        self.saveExpButton.setText('Сохранить')
        self.saveExpButton.clicked.connect(self.saveExperimentData)
        self.duplicateExpButton.setText('Копировать')
        self.duplicateExpButton.clicked.connect(self.duplicateExperimentData)
        self.duplicateExpButton.setEnabled(False)
        self.deleteExpButton.setText('Удалить')
        self.deleteExpButton.clicked.connect(self.deleteExperimentData)
        
        # self.pushButton.setText(_translate("MainWindow", "Применить"))
        self.addTableRowButton.setText(_translate("MainWindow", "Добавить"))
        self.cur_model_layout.setText(_translate("MainWindow", "Степенная"))
        self.label_6.setText(_translate("MainWindow", "Текущая модель:"))
        self.start_btn.setText(_translate("MainWindow", "Продолжить"))
        self.stop_btn.setText(_translate("MainWindow", "Остановить"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_5), _translate("MainWindow", "Подготовка"))
        self.label_12.setText(_translate("MainWindow", "Управление"))
        self.label_15.setText(_translate("MainWindow", "Целевая температура"))
        self.startTest.setText(_translate("MainWindow", "Начать"))
        self.stopTest.setText(_translate("MainWindow", "Остановить"))
        self.label_16.setText(_translate("MainWindow", "Двигатели"))
        self.label_17.setText(_translate("MainWindow", "Найти 0"))
        self.zeroSearch.setText(_translate("MainWindow", "Поиск"))
        self.label_18.setText(_translate("MainWindow", "Перемешивать"))
        self.smashSwitch.setText(_translate("MainWindow", "Старт"))
        self.label_19.setText(_translate("MainWindow", "Добавить комментарий"))
        self.submitComment.setText(_translate("MainWindow", "Записать"))
        self.pushButton_4.setText(_translate("MainWindow", "Отмена"))
        self.label_13.setText(_translate("MainWindow", "Ход испытания"))
        self.label_14.setText(_translate("MainWindow", "Логи испытания"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_7), _translate("MainWindow", "Испытание"))
        self.menuFile.setTitle(_translate("MainWindow", "Файл"))
        self.menu.setTitle(_translate("MainWindow", "Настройки"))
        self.menu_2.setTitle(_translate("MainWindow", "Выбрать модель ПИД"))
        self.save_as_file.setText(_translate("MainWindow", "Сохранить трек"))
        # self.save_as_file.triggered.connect(self.saveCsv)
        self.free_track.setText(_translate("MainWindow", "Отчистить"))
        self.free_track.triggered.connect(self.dropData)
        self.free_real_track.setText(_translate("MainWindow", "Отчистить данные"))
        self.free_real_track.triggered.connect(self.dropRealData)
        self.base_model.setText(_translate("MainWindow", "Базовая"))
        self.base_model.triggered.connect(lambda : self.setCurrentModel(self.text()))
        self.powered_model.setText(_translate("MainWindow", "Степенная"))
        self.powered_model.triggered.connect(lambda : self.setCurrentModel(self.powered_model.text()))
        self.production_model.setText(_translate("MainWindow", "Промышленная"))
        self.production_model.triggered.connect(lambda : self.setCurrentModel(self.production_model.text()))
        self.load_file.setText(_translate("MainWindow", "Загрузить трек"))
        self.load_file.triggered.connect(self.loadCsv)
    
    
    
        
        
    def saveExperimentData(self):
        
        
        if not self.state.experiment:
            self.state.experiment = Experiment('')
        self.state.experiment.name=self.expName.text()
        self.state.experiment.description=self.plainTextEdit.toPlainText()
        
        self.state.setExperimentFSTarget()
        #TODO: set other params
        self.state.experiment.save()
        self.__setSelectedExperiment(self.state.experiment)
        
    def duplicateExperimentData(self):
        if self.state.experiment:
            self.state.experiment.id = None
            self.state.experiment.name = str(self.state.experiment.name) + ' - копия'
        #TODO: add allert
        self.__setSelectedExperiment(self.state.experiment)
        print('nothing to duplicate')
        
    def deleteExperimentData(self):
        if self.state.experiment:
            self.state.experiment.delete()
        self.dropInfo()
        #TODO: add allert
           
    def setK_1(self, value):
        self.state.K_1 = value
        print('K_1', self.state.K_1)
        
    def setK_2(self, value):
        self.state.K_2 = value
        print('K_2', self.state.K_2)
        
    def setK_3(self, value):
        self.state.K_3 = value
        print('K_3', self.state.K_3)
        
    def setK_4(self, value):
        self.state.K_4 = value
        print('K_4', self.state.K_4)
        
    def setK_5(self, value):
        self.state.K_5 = value
        print('K_5', self.state.K_5)
        
    def setK_1_industrial(self, value):
        self.state.K_1_industrial = value
        print('K_1_industrial', self.state.K_5)
        
    def setK_2_industrial(self, value):
        self.state.K_2_industrial = value
        print('K_2_industrial', self.state.K_5)
        
    def setSpaceValue(self, value):
        self.state.spaceValue = value
        print('K_2_industrial', self.state.spaceValue)