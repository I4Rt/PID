# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'pid_test_2_excperiment.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'pid_test_3_excperiment.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QTimer
from pyqtgraph.widgets.MatplotlibWidget import MatplotlibWidget
import numpy as np


from random import randint

from threading import Thread
from time import time, sleep

class Ui_MainWindow(object):
    
    def __init__(self):
        object.__init__(self)
        self.curModelName = 'Степенная'
        self.plotData = [[i for i in range(100)], [randint(0, 100)/10 for i in range(100)]]
        self.K_1 = 0.
        self.K_2 = 0.
        self.K_3 = 0.
        self.K_4 = 0.
        self.K_5 = 0.
        
    def startUpdate(self):
        # Repeating timer, calls random_pick over and over.
        self.ui_target_plot_data,  = self.subplot.plot(self.plotData[0], self.plotData[1]) 
        self.ui_real_plot_data,  = self.subplot.plot(np.array(self.plotData[0]), self.plotData[1]) 
        self.plotupdater = QTimer()
        self.plotupdater.setInterval(500)
        self.plotupdater.timeout.connect(self.updatePlot)
        self.plotupdater.start()

    
        
    def updatePlot(self):
        
        # self.graphicsView.getFigure().gca().fill_between(self.plotData[0], np.array(self.plotData[1]) - 1, np.array(self.plotData[1]) + 1, color="#3F5D7D") 
        # updating data values
        self.ui_target_plot_data.set_xdata(self.plotData[0])
        self.ui_target_plot_data.set_ydata(self.plotData[1])
        
        self.ui_real_plot_data.set_xdata(self.plotData[0])
        self.ui_real_plot_data.set_ydata(np.array(self.plotData[1]) + randint(-3, 3))
        # drawing updated values
        self.graphicsView.getFigure().canvas.draw_idle()
        # self.graphicsView.draw()  
        
    
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(871, 596)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        
        
        self.graphicsView = MatplotlibWidget(self.centralwidget)
        self.subplot = self.graphicsView.getFigure().add_subplot()
        
        self.horizontalLayout.addWidget(self.graphicsView)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.k1_input = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.k1_input.setObjectName("k1_input")
        self.k1_input.valueChanged.connect(lambda: self.setK_1(self.k1_input.value()))
        self.verticalLayout.addWidget(self.k1_input)
        
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2)
        self.k2_input = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.k2_input.setObjectName("k2_input")
        self.verticalLayout.addWidget(self.k2_input)
        self.k2_input.valueChanged.connect(lambda: self.setK_2(self.k2_input.value()))
        
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setObjectName("label_3")
        self.verticalLayout.addWidget(self.label_3)
        self.k3_input = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.k3_input.setObjectName("k3_input")
        self.verticalLayout.addWidget(self.k3_input)
        self.k3_input.valueChanged.connect(lambda: self.setK_3(self.k3_input.value()))
        
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setObjectName("label_4")
        self.verticalLayout.addWidget(self.label_4)
        self.k4_input = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.k4_input.setObjectName("k4_input")
        self.k4_input.valueChanged.connect(lambda: self.setK_4(self.k4_input.value()))
        self.verticalLayout.addWidget(self.k4_input)
        
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setObjectName("label_5")
        self.verticalLayout.addWidget(self.label_5)
        self.k5_input = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.k5_input.setObjectName("k5_input")
        self.k5_input.valueChanged.connect(lambda: self.setK_5(self.k5_input.value()))
        self.verticalLayout.addWidget(self.k5_input)
        
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(lambda: self.append())
        self.verticalLayout.addWidget(self.pushButton)
        self.horizontalLayout.addLayout(self.verticalLayout)
        self.gridLayout.addLayout(self.horizontalLayout, 2, 0, 1, 1)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.start_btn = QtWidgets.QPushButton(self.centralwidget)
        self.start_btn.setObjectName("start_btn")
        self.horizontalLayout_2.addWidget(self.start_btn)
        self.stop_btn = QtWidgets.QPushButton(self.centralwidget)
        self.stop_btn.setObjectName("stop_btn")
        self.horizontalLayout_2.addWidget(self.stop_btn)
        self.gridLayout.addLayout(self.horizontalLayout_2, 4, 0, 1, 1)
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setObjectName("label_6")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_6)
        self.cur_model_layout = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.cur_model_layout.setFont(font)
        self.cur_model_layout.setObjectName("cur_model_layout")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.cur_model_layout)
        self.gridLayout.addLayout(self.formLayout, 0, 0, 1, 1)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout.addWidget(self.line, 3, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 871, 26))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menu_2 = QtWidgets.QMenu(self.menu)
        self.menu_2.setObjectName("menu_2")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.save_as_file = QtWidgets.QAction(MainWindow)
        self.save_as_file.setObjectName("save_as_file")
        self.free_track = QtWidgets.QAction(MainWindow)
        self.free_track.setObjectName("free_track")
        self.base_model = QtWidgets.QAction(MainWindow)
        self.base_model.setObjectName("base_model")
        self.powered_model = QtWidgets.QAction(MainWindow)
        self.powered_model.setObjectName("powered_model")
        self.production_model = QtWidgets.QAction(MainWindow)
        self.production_model.setObjectName("production_model")
        self.load_file = QtWidgets.QAction(MainWindow)
        self.load_file.setObjectName("load_file")
        self.menuFile.addAction(self.save_as_file)
        self.menuFile.addAction(self.load_file)
        self.menuFile.addAction(self.free_track)
        self.menu_2.addAction(self.base_model)
        self.menu_2.addSeparator()
        self.menu_2.addAction(self.powered_model)
        self.menu_2.addAction(self.production_model)
        self.menu.addAction(self.menu_2.menuAction())
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menu.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "K_1"))
        self.label_2.setText(_translate("MainWindow", "K_2"))
        self.label_3.setText(_translate("MainWindow", "K_3"))
        self.label_4.setText(_translate("MainWindow", "K_4"))
        self.label_5.setText(_translate("MainWindow", "K_5"))
        self.pushButton.setText(_translate("MainWindow", "Применить"))
        self.start_btn.setText(_translate("MainWindow", "Продолжить"))
        self.stop_btn.setText(_translate("MainWindow", "Остановить"))
        self.label_6.setText(_translate("MainWindow", "Текущая модель:"))
        self.cur_model_layout.setText(_translate("MainWindow", "Степенная"))
        self.menuFile.setTitle(_translate("MainWindow", "Испытание"))
        self.menu.setTitle(_translate("MainWindow", "Настройки"))
        self.menu_2.setTitle(_translate("MainWindow", "Выбрать модель ПИД"))
        self.save_as_file.setText(_translate("MainWindow", "Сохранить трек"))
        self.free_track.setText(_translate("MainWindow", "Отчистить"))
        self.base_model.setText(_translate("MainWindow", "Базовая"))
        self.base_model.triggered.connect(lambda : self.setCurrentModel(self.base_model.text()))
        self.powered_model.setText(_translate("MainWindow", "Степенная"))
        self.powered_model.triggered.connect(lambda : self.setCurrentModel(self.powered_model.text()))
        self.production_model.setText(_translate("MainWindow", "Промышленная"))
        self.production_model.triggered.connect(lambda : self.setCurrentModel(self.production_model.text()))
        self.load_file.setText(_translate("MainWindow", "Загрузить трек"))
    
    
    def setCurrentModel(self, value):
        self.cur_model_layout.setText(value)
        self.curModelName = value
        
    def setK_1(self, value):
        self.K_1 = value
        print('K_1', self.K_1)
        
    def setK_2(self, value):
        self.K_2 = value
        print('K_2', self.K_2)
        
    def setK_3(self, value):
        self.K_3 = value
        print('K_3', self.K_3)
        
    def setK_4(self, value):
        self.K_4 = value
        print('K_4', self.K_4)
        
    def setK_5(self, value):
        self.K_5 = value
        print('K_5', self.K_5)
        
    def append(self):
        self.plotData[0].append(self.plotData[0][-1] + 1)
        self.plotData[1].append(randint(0,100)/10)
        
        self.plotData[0] = self.plotData[0][-100:]
        self.plotData[1] = self.plotData[1][-100:]
        
    


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    
    ui.setupUi(MainWindow)
    ui.startUpdate()
    MainWindow.show()
    
    sys.exit(app.exec_())
